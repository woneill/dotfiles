#!/usr/bin/env bash

# script/setup: Set up application for the first time after cloning, or set it
#               back to the initial first unused state.

set -e

cd "$(dirname "$0")/.."

script/bootstrap

stow -R bash ctags direnv git homebrew puppet python ruby screen travisci vagrant vim

if [ "$(uname -s)" = "Darwin" ]; then
    stow -R osx

    if [ -f "${HOME}/.Brewfile" ]; then
        brew update
        brew bundle check --global >/dev/null 2>&1  || {
            echo "==> Installing Global Homebrew dependencies…"
            brew bundle --global
        }
    fi

    if [ -f /Applications/Docker.app/Contents/Resources/etc ]; then
        echo "==> Installing Docker bash completion…"
        stow -R -t "$(brew --prefix)/etc/bash_completion.d" -d /Applications/Docker.app/Contents/Resources etc
    fi

    cellar=$(brew --cellar)
    # Link brewed python versions into pyenv
    echo "==> Linking python versions into pyenv…"
    stow -R -t "${PYENV_ROOT:-/usr/local/var/pyenv}/versions" -d "$cellar" python python3

    # Link brewed ruby versions into rbenv
    echo "==> Linking ruby versions into rbenv…"
    stow -R -t "${RBENV_ROOT:-/usr/local/var/rbenv}/versions" -d "$cellar" ruby

fi

if [ ! -d ~/.vim/bundle/Vundle.vim ]; then
    echo "==> Installing vim bundles…"
    mkdir -p ~/.vim/bundle
    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
    vim +PluginInstall +qall
fi

echo "==> Ready to go!"
